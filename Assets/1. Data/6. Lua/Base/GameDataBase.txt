GameDataBase = class()
local this = GameDataBase

function this:new()
  self.Resource = {}
  self.Resource.Mine  = 0
  self.Resource.Iron = 0
  self.Resource.Wood = 0
  self.Resource.Food = 0
  self.Resource.TechPoint = 0
  self.Resource.FaithPoint = 0
  self.Resource.Pressure = 0
  self.Resource.Insight = 0
  self.Resource.DrawNum = 3
  self.Resource.Population = 20
  self.Resource.Labor = 20
  self.Resource.LaborAvailable = 20
  self.Resource.Residence = 0
  
  self.Build={}
  self.Build.Deck={}
  self.Build.Relic={}
  self.Build.BuildingDeck={}
  self.Build.Heros={}

  self.EventDeck={}

  self.inGame={}
  self.inGame.Hands={}
  self.inGame.DrawDeck={}
  self.inGame.RecycleDeck={}
  self.inGame.Buff={}
  self.inGame.LaborManager={}
  self.inGame.CurrentRound=0
  self.inGame.BDrawDeck={}
  self.inGame.BRecycleDeck={}
  self.inGame.BHands={}

  self.BuffTrigger={}
  self.BuffTrigger.BattleBegin={}
  self.BuffTrigger.RoundBegin={}
  self.BuffTrigger.RoundEnd={}



end

function shuffle(t)
  if type(t)~="table" then
    return nil
  end
  local tab = {}
  local index = 1
  while #t ~= 0 do
    local n = math.random(0,#t)
    if t[n]~=nil then
      tab[index] = t[n]
      table.remove(t,n)
      index = index +1
    end
  end
  return tab
end


function this:RenewDrawDeck()
  self.inGame.DrawDeck = shuffle(self.inGame.RecycleDeck)
  self.inGame.RecycleDeck={}
end

function this:NewBattle() --
  self.inGame.DrawDeck = self.Build.Deck
  self.inGame.BDrawDeck = self.Build.BuildingDeck
  for i = 1,#self.BuffTrigger.BattleBegin do
    self.BuffTrigger.BattleBegin[i].apply()
  end
end